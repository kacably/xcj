server:
  port: 8888
  servlet:
    context-path: /xcJ
spring:
  datasource:
    name: druidDataSource
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url1: jdbc:mysql://127.0.0.1:3306/xcj?useUnicode=true&characterEncoding=utf8&serverTimezone=CTT
    username1: root
    password1: mys38425

    url2: jdbc:mysql://127.0.0.1:3306/test2?useUnicode=true&characterEncoding=utf8&serverTimezone=CTT
    username2: root
    password2: mys38425

    #初始化大小，最小，最大
    initial-size: 5
    min-idle: 5
    max-active: 20
    #配置获取连接等待超时的时间
    max-wait: 60000
    #配置多久检测一次，检测需要关闭空间连接，单位ms
    time-between-eviction-runs-millis: 60000
    # 配置一个池中最小生存的时间
    min-evictable-idle-time-millis: 300000
    #用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用
    validation-query: SELECT 1 FROM DUAL
    #建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
    test-while-idle: true
    #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
    test-on-borrow: false
    #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
    test-on-return: false
    #要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
    max-pool-prepared-statement-per-connection-size: 20
    #属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：
    #监控统计用的filter:stat
    #日志用的filter:log4j
    #防御sql注入的filter:wall
    filters: stat,wall
    #合并多个DruidDataSource的监控数据
    use-global-data-source-stat: true
    #通过connectProperties属性打开mergeSql功能;慢sql记录
    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
  rabbitmq:
    #用户名
    username: admin
    #密码
    password: admin
    #ip
    host: localhost
    #端口
    port: 5672
    #发送失败退回
    publisher-returns: true
    #消息发送确认
    publisher-confirm-type: correlated
    #监听不可达的信息，为 true 这样 publisher-returns 才会触发   #设置为 true 后 消费者在消息没有被路由到合适队列情况下会被return监听，而不会自动删除
    template:
      mandatory: true


  redis:
    #redis数据库索引默认0
    database: 0
    #服务器地址
    host: 127.0.0.1
    #端口
    port: 6379
    #密码
    password:
    jedis:
      pool:
        #连接池最大连接数
        max-active: 30
        #最小空闲数量
        min-idle: 10
        # 连接池最大阻塞等待时间 ms（使用负值表示没有限制）
        max-wait: 10000
        #最大空闲数量
        max-idle: 30

  cache:
    type: redis
    redis:
      #缓存超时时间 -1 应该是永久的
      time-to-live: -1
      #能否缓存空值
      cache-null-values: false


mybatis:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  mapper-locations: classpath:mapper/*.xml

